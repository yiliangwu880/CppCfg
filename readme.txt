介绍：
	进程通常都有配置文件读取。为了让配置使用和相关代码开发最简单，效率化，因此设计了个辅助工具 CppCfg。
	CppCfg做配置使用步骤：
	）编辑配置文件，定义对象内容以及结构。支持简单的类C语言格式，json格式
	）导出解析对象的类，为cpp文件。
	）cpp文件加入项目编译
	）启动进程，生成对象。
	
	亮点：
		cpp代码的配置类，自动生成。
		代码读取配置静态化。比如: ip = cfg.ip; 而不是 ip=cfg.Get("ip");
		代码配置名和具体配置一样。 而不是像proto的cpp风格。比如 msg.get_ip();

	
编译方法：
	整个文件夹放到linux目录，安装cmake gcc git等。

	主目录执行：sh clearBuild.sh 完成编译

vs浏览代码：
	执行.\vs\run.bat,生成sln文件


目录结构：



详细介绍：

开发这个工具的原因：
	开发一个服务器，进程几乎都需要读取简单配置启动。
	见过最低效的开发方法：
		）编辑配置文件
		）编辑cpp对应解析代码。  
	    ）cpp文件加入项目编译 
		）启动进程，解析出配置对象。 
		评论：它的明显缺点是手工。
		
	protobuf做配置，如下：	
		）编辑配置文件，定义对象内容。
		）定义对结构。
		）导出解析对象的类，为cpp文件。
	    ）cpp文件加入项目编译
		）启动进程，生成对象。 （依赖protobuf库）
		评论：
			自动化不错，可惜对象内容和结构分析编写，效率低。
			依赖protobuf库
			cpp获取对象字段的写法格式难看，特别是数组类型，接口复杂，需要学习成本。
	
	集合以上的优缺点因此设计出EasyCfgCpp工具。

配置结构用json.		
	不考虑xml原因，xml能定义丰富的对象以及结构定义。可是格式真的很眼花，编写低效。不合适简单的配置。
	

详细功能：
	导出cpp工具。基于linux平台
	读取配置文件
	读取字符串配置
	静态格式检查
	热更新配置